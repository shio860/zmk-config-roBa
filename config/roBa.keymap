#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        BTN2 {
            bindings = <&mkp MB2>;
            key-positions = <18 19>;
        };

        alt_tab_left {
            bindings = <&alt_tab>;
            key-positions = <12 13>;
            slow-release;
        };

        alt_tab_rght {
            bindings = <&alt_tab>;
            key-positions = <19 20>;
            slow-release;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 5 &kp LALT>;
            label = "ALT_TAB";
        };

        int4_0: int4_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp INT4>;
            label = "INT4_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W    &kp E   &kp R                       &kp T                                                &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A           &kp S    &kp D   &kp F                       &kp G            &mkp MB3              &kp EXCL      &kp H          &kp J  &lt 5 K    &kp L    &kp MINUS
&mt LEFT_GUI Z  &kp X    &kp C   &kp V                       &kp B            &kp LG(LS(LEFT))      &kp QUESTION  &kp N          &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp F5          &kp ESC  &tog 2  &lt_to_layer_0 2 BACKSPACE  &mt LCTRL SPACE  &lt 3 ENTER           &mt DEL LALT  &mt LSHFT TAB                             &int4_0
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp SLASH  &kp N7    &kp N8     &kp N9  &kp ASTERISK                                 &kp AT           &kp BACKSLASH     &kp HASH           &kp DOLLAR            &kp PERCENT
&kp DOT    &kp N4    &kp N5     &kp N6  &kp MINUS     &trans         &kp SQT         &kp COLON        &kp SEMICOLON     &lt 5 AMPERSAND    &kp DOUBLE_QUOTES     &kp UNDERSCORE
&kp N0     &kp N1    &kp N2     &kp N3  &kp PLUS      &kp EQUAL      &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans     &kp PIPE  &kp COMMA  &trans  &trans        &trans         &trans          &trans                                                                      &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        ARROW {
            bindings = <
&mt LEFT_GUI LA(F4)  &kp HOME        &kp UP_ARROW    &kp END          &kp LA(UP)                                             &kp LA(UP)        &kp HOME   &kp UP    &kp END    &mt LGUI LA(F4)
&mt LSHFT ENTER      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LA(LEFT)       &trans              &kp LG(D)       &kp LA(LEFT)      &kp LEFT   &kp DOWN  &kp RIGHT  &mt LSHFT ENTER
&mt LCTRL K_APP      &kp PG_UP       &kp F2          &kp PG_DN        &kp LS(LG(RIGHT))  &kp LG(LS(UP))      &kp LG(LS(UP))  &kp LG(LS(LEFT))  &kp PG_UP  &kp F2    &kp PG_DN  &mt LCTRL K_APP
&trans               &trans          &trans          &trans           &trans             &trans              &trans          &trans                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans   &trans       &trans  &kp UP    &trans                      &trans  &kp LC(T)              &trans  &trans       &trans
&kp DEL  &kp LS(TAB)  &trans  &kp TAB   &trans  &trans      &trans  &trans  &mt LCTRL LC(LS(TAB))  &trans  &kp LC(TAB)  &kp DEL
&trans   &trans       &trans  &kp DOWN  &trans  &trans      &trans  &trans  &kp LC(W)              &trans  &trans       &trans
&trans   &trans       &trans  &trans    &trans  &trans      &trans  &trans                                              &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
