#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <180>;
    tapping-term-ms = <180>;
};

&lt {
    tapping-term-ms = <180>;
    quick-tap-ms = <180>;
    flavor = "balanced";
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        btn2 {
            bindings = <&mkp MB2>;
            key-positions = <18 19>;
        };

        Gv {
            bindings = <&kp LG(V)>;
            key-positions = <24 25>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <22 23>;
        };

        SGleft {
            bindings = <&kp LS(LG(LEFT))>;
            key-positions = <10 11>;
        };

        Atab {
            bindings = <&alt_tab>;
            key-positions = <12 13>;
            slow-release;
        };
    };

    macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 5 &kp LALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 5 &kp LALT>;

            label = "ALT_TAB";
        };

        to_kp: mo_kp {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &to MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>;
            label = "MO_KP";
        };

        to0_kp: layer1_int5 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_press>;

            label = "LAYER1_INT5";
        };
    };

    behaviors {
        rotate_msc: rotate_msc {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ROTATE_MSC";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        };

        mt_layer1: mt_layer1 {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_LAYER1";
            bindings = <&mo>, <&to0_kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q              &kp W  &kp E          &kp R                &kp T                                              &kp Y          &kp U  &kp I      &kp O    &kp P
&lt 5 A            &kp S  &kp D          &kp F                &kp G            &mkp MB3            &kp EXCL      &kp H          &kp J  &lt 5 K    &kp L    &lt 5 MINUS
&kp Z              &kp X  &kp C          &kp V                &kp B            &none               &kp QUESTION  &kp N          &kp M  &kp COMMA  &kp DOT  &kp SLASH
&mt_layer1 1 INT5  &none  &to_kp 1 INT5  &mt LSHFT BACKSPACE  &mt LCTRL SPACE  &mt LALT ENTER      &mt LGUI DEL  &mt LSHFT TAB                             &mt_layer1 1 INT4
            >;

            sensor-bindings = <&rotate_msc>;
        };

        NUM {
            bindings = <
&kp SLASH  &kp N7      &kp N8      &kp N9  &kp ASTERISK                                &kp N7            &kp LS(N2)     &kp RBRC      &kp BSLH    &kp LS(N6)
&kp DOT    &kp N4      &kp N5      &kp N6  &kp MINUS     &trans          &kp INT1      &kp SINGLE_QUOTE  &kp SEMICOLON  &lt 5 LS(N8)  &kp LS(N9)  &kp LS(MINUS)
&kp N0     &kp N1      &kp N2      &kp N3  &kp PLUS      &kp LS(N1)      &kp LS(INT3)  &kp LS(N4)        &kp LBRC       &kp COMMA     &kp DOT     &kp LS(INT1)
&trans     &kp LS(N5)  &kp LS(N3)  &trans  &trans        &trans          &trans        &trans                                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_DOWN K_SCROLL_UP>;
        };

        layer2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        layer3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                            &trans
            >;
        };

        SCROLL {
            bindings = <
&kp LA(F4)      &kp HOME   &kp UP    &kp END    &kp LA(UP)                                       &kp PG_UP        &kp HOME        &kp UP    &kp END    &kp PG_DN
&kp LC(W)       &kp LEFT   &kp DOWN  &kp RIGHT  &kp LC(TAB)  &trans              &trans          &kp LC(TAB)      &mt LCTRL LEFT  &kp DOWN  &kp RIGHT  &kp LC(W)
&kp LS(LG(UP))  &kp PG_UP  &kp F2    &kp PG_DN  &kp K_APP    &trans              &trans          &kp K_APP        &kp PG_UP       &kp F2    &kp PG_DN  &kp LS(LG(S))
&to_kp 1 INT5   &trans     &kp DOWN  &trans     &trans       &mt LGUI ENTER      &mt LGUI K_APP  &mt ENTER ENTER                                       &to_kp 1 INT4
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        layer6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
